{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/item/item.component.ts","webpack:///src/app/item/item.component.html","webpack:///src/app/list/list.component.ts","webpack:///src/app/list/list.component.html","webpack:///src/app/log.service.ts","webpack:///src/app/starwars.service.ts","webpack:///src/app/tabs/tabs.component.ts","webpack:///src/app/tabs/tabs.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","redirectTo","pathMatch","loadChildren","m","CreateCharacterModule","AppRoutingModule","forRoot","imports","AppComponent","swService","fetchCharacters","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HeaderComponent","ItemComponent","side","onSideChosen","name","character","onAssign","ListComponent","activatedRoute","characters","loadedSide","params","subscribe","getCharacters","subscription","charactersChanged","unsubscribe","LogService","logText","console","log","StarWarsService","logService","http","get","map","response","data","json","extractedChars","results","chars","char","next","chosenList","slice","filter","characterInfo","position","findIndex","writeLog","newChar","push","TabsComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule} from '@angular/core';\r\nimport { TabsComponent } from './tabs/tabs.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nconst routes =  [\r\n  {path: 'characters', component: TabsComponent, children:[\r\n    {path: '', redirectTo: 'all', pathMatch: 'full'},\r\n    {path: ':side', component: ListComponent}\r\n  ]},\r\n  { path: 'new-character', loadChildren:\r\n       () => import('src/app/create-character/create-character.module').then(m => m.CreateCharacterModule) },\r\n       //lesson path is outdatted\r\n      // {path: 'new-character', loadChildren: 'src/app/create-character/create-character.module.ts#CreateCharacterModule'},\r\n  {path: '**', redirectTo: '/characters'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { StarWarsService } from './starwars.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  swService: StarWarsService;\n\n  constructor(swService: StarWarsService){\n    this.swService = swService;\n  }\n  ngOnInit(){\n    this.swService.fetchCharacters();\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-sm-6\">\n      <app-header></app-header>\n    </div>\n  </div>\n  <hr>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { ListComponent } from './list/list.component';\nimport { ItemComponent } from './item/item.component';\nimport { StarWarsService } from './starwars.service';\nimport { LogService } from './log.service';\nimport { HeaderComponent } from './header/header.component';\nimport { HttpModule} from '@angular/Http' ;\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TabsComponent,\n    ListComponent,\n    ItemComponent,\n    HeaderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    AppRoutingModule\n  ],\n  providers: [StarWarsService, LogService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul class=\"nav nav-tabs\">\n  <li class=\"nav-item\" >\n    <a class=\"nav-link\"\n    routerLink=\"/characters\"\n    routerLinkActive=\"active\">Star Wars</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\"\n     routerLink=\"/new-character\"\n     routerLinkActive=\"active\"\n    [routerLinkActiveOptions] =\"{exact: true}\">New Character</a>\n  </li>\n</ul>\n","import { Component, OnInit, Input} from '@angular/core';\nimport { StarWarsService } from '../starwars.service';\n\n@Component({\n  selector: 'app-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.css']\n})\nexport class ItemComponent implements OnInit {\n  @Input() character;\n  swService: StarWarsService;\n\n  constructor(swService: StarWarsService) {\n    this.swService = swService;\n   }\n\n  ngOnInit(): void {\n  }\n\n  onAssign(side){\n\n    this.swService.onSideChosen({name: this.character.name, side: side});\n  }\n}\n","  <a style=\"cursor: pointer\" class=\"list-group-item\">\n    <h4 class=\"list-group-item-heading\">{{ character.name }}</h4>\n    <div>\n      <button class=\"btn btn-primary\" (click)=\"onAssign('light')\">Light</button>\n      <button class=\"btn btn-danger\" (click)=\"onAssign('dark')\">Dark</button>\n    </div>\n  </a>\n","import { Component, OnInit, Input, OnDestroy} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { StarWarsService } from '../starwars.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit, OnDestroy {\n  characters =[];\n  loadedSide = 'all';\n  subscription;\n  swService:  StarWarsService;\n  activatedRoute: ActivatedRoute;\n\n  constructor(activatedRoute: ActivatedRoute, swService: StarWarsService) {\n    this.activatedRoute = activatedRoute;\n    this.swService = swService;\n   }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(\n      (params) => {\n        this.characters = this.swService.getCharacters(params.side);\n        this.loadedSide = params.side;\n      }\n    );\n    this.subscription = this.swService.charactersChanged.subscribe(\n      () => {\n        this.characters = this.swService.getCharacters(this.loadedSide);\n        }\n    )\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"list-group\">\n  <app-item *ngFor=\"let character of characters\"\n   [character]=\"character\"></app-item>\n</div>\n","export class LogService {\n\n  constructor() { }\n\n  writeLog(logText){\n    console.log(logText);\n  }\n}\n","import { LogService } from './log.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/Http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Subject } from 'rxjs';\r\n@Injectable()\r\nexport class StarWarsService {\r\n\r\n private characters= [\r\n    {name: \"Luke Skywalker\", side: ''},\r\n    {name: \"Darth Vader\", side: ''},\r\n    {name: \"Obi Wan Kenobi\", side: ''}\r\n  ];\r\n  private logService: LogService;\r\n  charactersChanged = new Subject<void>();\r\n  http: Http;\r\n  constructor(logService: LogService, http: Http){\r\n    this.logService = logService;\r\n    this.http = http;\r\n  }\r\n\r\n  fetchCharacters(){\r\n    this.http.get('https://swapi.dev/api/people/')\r\n      .map((response: Response) => {\r\n        const data = response.json();\r\n        const extractedChars = data.results;\r\n        const chars = extractedChars.map((char) => {\r\n          return {name: char.name , side: ''}\r\n        });\r\n        return chars;\r\n      })\r\n      .subscribe(\r\n        (data) => {\r\n          console.log(data);\r\n          this.characters = data;\r\n          this.charactersChanged.next();\r\n        }\r\n      );\r\n\r\n  }\r\n\r\n  getCharacters(chosenList){\r\n    if (chosenList === 'all'){\r\n      return this.characters.slice();\r\n    }\r\n    return this.characters.filter((character) =>{\r\n      return character.side === chosenList;\r\n    })\r\n  }\r\n\r\n  onSideChosen(characterInfo){\r\n    const position = this.characters.findIndex((character) =>{\r\n      return character.name === characterInfo.name;\r\n    })\r\n    this.characters[position].side = characterInfo.side;\r\n    this.charactersChanged.next();\r\n    this.logService.writeLog('Changed side of ' + characterInfo.name + ', new side: ' + characterInfo.side);\r\n\r\n  }\r\n\r\n\r\n  addCharacter(name, side){\r\n    const position = this.characters.findIndex((character) =>{\r\n      return character.name === name;\r\n    })\r\n    if(position !== -1){\r\n      return;\r\n    }\r\n    const newChar = {name: name, side: side};\r\n\r\n    this.characters.push(newChar);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { StarWarsService } from '../starwars.service';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.css']\n})\nexport class TabsComponent implements OnInit {\n\n  characters = [];\n  chosenList = 'all';\n  swService: StarWarsService;\n\n  constructor(swService: StarWarsService) {\n    this.swService = swService;\n   }\n\n  ngOnInit(): void {\n  }\n\n  onChoose(side){\n    this.chosenList = side;\n  }\n\n  getCharacters(){\n    this.characters = this.swService.getCharacters(this.chosenList);\n    return this.characters;\n  }\n\n\n}\n","<div>\n  <ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"/characters/all\"\n      routerLinkActive=\"active\">All</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"/characters/light\"\n      routerLinkActive=\"active\">Light</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"/characters/dark\"\n      routerLinkActive=\"active\">Dark</a>\n    </li>\n  </ul>\n  <router-outlet></router-outlet>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}