{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/item/item.component.ts","./src/app/item/item.component.html","./src/app/list/list.component.ts","./src/app/list/list.component.html","./src/app/log.service.ts","./src/app/starwars.service.ts","./src/app/tabs/tabs.component.ts","./src/app/tabs/tabs.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule} from '@angular/core';\r\nimport { TabsComponent } from './tabs/tabs.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nconst routes =  [\r\n  {path: 'characters', component: TabsComponent, children:[\r\n    {path: '', redirectTo: 'all', pathMatch: 'full'},\r\n    {path: ':side', component: ListComponent}\r\n  ]},\r\n  { path: 'new-character', loadChildren:\r\n       () => import('src/app/create-character/create-character.module').then(m => m.CreateCharacterModule) },\r\n       //lesson path is outdatted\r\n      // {path: 'new-character', loadChildren: 'src/app/create-character/create-character.module.ts#CreateCharacterModule'},\r\n  {path: '**', redirectTo: '/characters'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { StarWarsService } from './starwars.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  swService: StarWarsService;\n\n  constructor(swService: StarWarsService){\n    this.swService = swService;\n  }\n  ngOnInit(){\n    this.swService.fetchCharacters();\n  }\n}\n","<div class=\"container\">\n  <div class=\"header-container\">\n    <h1>Star Wars Alliances</h1>\n    <h3>Add the characters to the side you see fit</h3>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-sm-6\">\n      <app-header></app-header>\n    </div>\n  </div>\n  <hr>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { ListComponent } from './list/list.component';\nimport { ItemComponent } from './item/item.component';\nimport { StarWarsService } from './starwars.service';\nimport { LogService } from './log.service';\nimport { HeaderComponent } from './header/header.component';\nimport { HttpModule} from '@angular/Http' ;\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TabsComponent,\n    ListComponent,\n    ItemComponent,\n    HeaderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    AppRoutingModule\n  ],\n  providers: [StarWarsService, LogService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul class=\"nav nav-tabs\">\n  <li class=\"nav-item\" >\n    <a class=\"nav-link\"\n    routerLink=\"/characters\"\n    routerLinkActive=\"active\">Character List</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\"\n     routerLink=\"/new-character\"\n     routerLinkActive=\"active\"\n    [routerLinkActiveOptions] =\"{exact: true}\">New Character</a>\n  </li>\n</ul>\n","import { Component, OnInit, Input} from '@angular/core';\nimport { StarWarsService } from '../starwars.service';\n\n@Component({\n  selector: 'app-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.css']\n})\nexport class ItemComponent implements OnInit {\n  @Input() character;\n  swService: StarWarsService;\n\n  constructor(swService: StarWarsService) {\n    this.swService = swService;\n   }\n\n  ngOnInit(): void {\n  }\n\n  onAssign(side){\n\n    this.swService.onSideChosen({name: this.character.name, side: side});\n  }\n}\n","  <a style=\"cursor: pointer\" class=\"list-group-item\">\n    <h4 class=\"list-group-item-heading\">{{ character.name }}</h4>\n    <div>\n      <button class=\"btn btn-primary\" (click)=\"onAssign('light')\">Light</button>\n      <button class=\"btn btn-danger\" (click)=\"onAssign('dark')\">Dark</button>\n    </div>\n  </a>\n","import { Component, OnInit, Input, OnDestroy} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { StarWarsService } from '../starwars.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit, OnDestroy {\n  characters =[];\n  loadedSide = 'all';\n  subscription;\n  swService:  StarWarsService;\n  activatedRoute: ActivatedRoute;\n\n  constructor(activatedRoute: ActivatedRoute, swService: StarWarsService) {\n    this.activatedRoute = activatedRoute;\n    this.swService = swService;\n   }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(\n      (params) => {\n        this.characters = this.swService.getCharacters(params.side);\n        this.loadedSide = params.side;\n      }\n    );\n    this.subscription = this.swService.charactersChanged.subscribe(\n      () => {\n        this.characters = this.swService.getCharacters(this.loadedSide);\n        }\n    )\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"list-group\">\n  <app-item *ngFor=\"let character of characters\"\n   [character]=\"character\"></app-item>\n</div>\n","export class LogService {\n\n  constructor() { }\n\n  writeLog(logText){\n    console.log(logText);\n  }\n}\n","import { LogService } from './log.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/Http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Subject } from 'rxjs';\r\n@Injectable()\r\nexport class StarWarsService {\r\n\r\n private characters= [\r\n    {name: \"Luke Skywalker\", side: ''},\r\n    {name: \"Darth Vader\", side: ''},\r\n    {name: \"Obi Wan Kenobi\", side: ''}\r\n  ];\r\n  private logService: LogService;\r\n  charactersChanged = new Subject<void>();\r\n  http: Http;\r\n  constructor(logService: LogService, http: Http){\r\n    this.logService = logService;\r\n    this.http = http;\r\n  }\r\n\r\n  fetchCharacters(){\r\n    this.http.get('https://swapi.dev/api/people/')\r\n      .map((response: Response) => {\r\n        const data = response.json();\r\n        const extractedChars = data.results;\r\n        const chars = extractedChars.map((char) => {\r\n          return {name: char.name , side: ''}\r\n        });\r\n        return chars;\r\n      })\r\n      .subscribe(\r\n        (data) => {\r\n          console.log(data);\r\n          this.characters = data;\r\n          this.charactersChanged.next();\r\n        }\r\n      );\r\n\r\n  }\r\n\r\n  getCharacters(chosenList){\r\n    if (chosenList === 'all'){\r\n      return this.characters.slice();\r\n    }\r\n    return this.characters.filter((character) =>{\r\n      return character.side === chosenList;\r\n    })\r\n  }\r\n\r\n  onSideChosen(characterInfo){\r\n    const position = this.characters.findIndex((character) =>{\r\n      return character.name === characterInfo.name;\r\n    })\r\n    this.characters[position].side = characterInfo.side;\r\n    this.charactersChanged.next();\r\n    this.logService.writeLog('Changed side of ' + characterInfo.name + ', new side: ' + characterInfo.side);\r\n\r\n  }\r\n\r\n\r\n  addCharacter(name, side){\r\n    const position = this.characters.findIndex((character) =>{\r\n      return character.name === name;\r\n    })\r\n    if(position !== -1){\r\n      return;\r\n    }\r\n    const newChar = {name: name, side: side};\r\n\r\n    this.characters.push(newChar);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { StarWarsService } from '../starwars.service';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.css']\n})\nexport class TabsComponent implements OnInit {\n\n  characters = [];\n  chosenList = 'all';\n  swService: StarWarsService;\n\n  constructor(swService: StarWarsService) {\n    this.swService = swService;\n   }\n\n  ngOnInit(): void {\n  }\n\n  onChoose(side){\n    this.chosenList = side;\n  }\n\n  getCharacters(){\n    this.characters = this.swService.getCharacters(this.chosenList);\n    return this.characters;\n  }\n\n\n}\n","<div>\n  <ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" id=\"all\" routerLink=\"/characters/all\"\n      routerLinkActive=\"active\">All</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link lightside\" routerLink=\"/characters/light\"\n      routerLinkActive=\"active\">Light</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link darkside\" routerLink=\"/characters/dark\"\n      routerLinkActive=\"active\">Dark</a>\n    </li>\n  </ul>\n  <router-outlet></router-outlet>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}